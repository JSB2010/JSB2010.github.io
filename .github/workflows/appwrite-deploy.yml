name: Deploy Appwrite Functions

on:
  push:
    branches:
      - modern-redesign-shadcn
    paths:
      - 'functions/email-notification/**'
      - 'functions/email-notification-updated/**'
      - '.github/workflows/appwrite-deploy.yml'
  workflow_dispatch:

jobs:
  check_secrets:
    runs-on: ubuntu-latest
    outputs:
      secrets_exist: ${{ steps.check.outputs.secrets_exist }}
    steps:
      - id: check
        run: |
          if [[ -n "${{ secrets.APPWRITE_EMAIL }}" && -n "${{ secrets.APPWRITE_PASSWORD }}" && -n "${{ secrets.APPWRITE_PROJECT_ID }}" && -n "${{ secrets.APPWRITE_EMAIL_FUNCTION_ID }}" ]]; then
            echo "secrets_exist=true" >> $GITHUB_OUTPUT
          else
            echo "secrets_exist=false" >> $GITHUB_OUTPUT
            echo "::warning::One or more required Appwrite secrets are not set. Skipping deployment."
          fi

  deploy_appwrite_functions:
    needs: check_secrets
    if: needs.check_secrets.outputs.secrets_exist == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Appwrite CLI
        run: npm install -g appwrite-cli

      - name: Login to Appwrite
        run: |
          # Set the endpoint globally
          appwrite client --endpoint https://nyc.cloud.appwrite.io/v1

          # Login to Appwrite
          echo 'y' | appwrite login --email ${{ secrets.APPWRITE_EMAIL }} --password ${{ secrets.APPWRITE_PASSWORD }}

          # Set the project
          appwrite client --project-id ${{ secrets.APPWRITE_PROJECT_ID }}

      - name: List Available Functions
        run: |
          echo "Listing all available functions in the project:"
          appwrite functions list

          # Save the function list to a file for better analysis
          appwrite functions list --json > function_list.json
          cat function_list.json

          # Print the function ID we're looking for
          echo "Looking for function ID: ${{ secrets.APPWRITE_EMAIL_FUNCTION_ID }}"

      - name: Create or Update Function
        id: function_setup
        run: |
          # Always try to create the function - if it exists, we'll get an error but continue
          echo "Attempting to create function (will continue if it already exists)..."
          appwrite functions create \
            --name "Contact Form Email Notification" \
            --runtime node-18.0 \
            --execute any \
            --function-id ${{ secrets.APPWRITE_EMAIL_FUNCTION_ID }} || echo "Function may already exist, continuing..."

          # List functions again to see if our function is now visible
          echo "Listing functions after creation attempt:"
          appwrite functions list

          # Verify the function exists now
          echo "Verifying function exists..."
          appwrite functions get --function-id ${{ secrets.APPWRITE_EMAIL_FUNCTION_ID }} --verbose || {
            echo "::error::Function still doesn't exist after creation attempt. Please check the function ID and permissions."
            exit 1
          }

          echo "Function verified. Ready for deployment."

      - name: Deploy Email Notification Function
        run: |
          cd functions/email-notification-updated

          echo "Deploying function code..."
          appwrite functions create-deployment \
            --function-id ${{ secrets.APPWRITE_EMAIL_FUNCTION_ID }} \
            --entrypoint src/main.js \
            --code . \
            --activate true \
            --verbose

  build_function:
    runs-on: ubuntu-latest
    if: needs.check_secrets.outputs.secrets_exist != 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        working-directory: functions/email-notification-updated
        run: npm ci

      - name: Test function build
        working-directory: functions/email-notification-updated
        run: |
          echo "Building function to verify it compiles correctly"
          npm install
          echo "Function build successful"
